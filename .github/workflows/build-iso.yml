name: build installer

# 1) Trigger manually
on:
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest

    steps:
      # 2) Get the repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # get full history (for flake checks)

      # 3) Install Nix so we can use flakes
      - name: Set up Nix
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
        # This action boots Nix in and makes `nix` commands available

      # 4) Build the ISO via flake
      - name: Build NixOS ISO
        working-directory: . # root of the flake
        run: |
          nix build .#nixosConfigurations.nyx.config.system.build.isoImage --no-link
        # Results in a store path; the --no-link avoids creating ./result

      # 5) Discover the ISO file name
      - name: Find ISO output
        id: find_iso
        run: |
          iso=$(find $(nix eval --raw .#nixosConfigurations.nyx.config.system.build.isoImage) -type f -name '*.iso' | head -n1)
          echo "::set-output name=path::$iso"

      # 6) Upload it as an artifact
      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: nixos-installer-iso
          path: ${{ steps.find_iso.outputs.path }}
        # Saves the ISO with the run, retrievable from the Actions UI
